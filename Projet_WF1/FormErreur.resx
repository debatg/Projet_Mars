<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>